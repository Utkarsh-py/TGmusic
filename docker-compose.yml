version: '3.8'

services:
  music-bot:
    build: .
    container_name: telegram-music-bot
    restart: unless-stopped
    environment:
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
      - BOT_TOKEN=${BOT_TOKEN}
      - SESSION_NAME=${SESSION_NAME}
      - ADMIN_USERS=${ADMIN_USERS}
    volumes:
      - ./downloads:/app/downloads
      - ./data:/app/data
      - ./sessions:/app/sessions
    networks:
      - music-bot-network
    depends_on:
      - redis
      - postgres

  redis:
    image: redis:7-alpine
    container_name: music-bot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - music-bot-network

  postgres:
    image: postgres:15-alpine
    container_name: music-bot-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=musicbot
      - POSTGRES_USER=musicbot
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - music-bot-network

  nginx:
    image: nginx:alpine
    container_name: music-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - music-bot-network
    depends_on:
      - music-bot

volumes:
  redis-data:
  postgres-data:

networks:
  music-bot-network:
    driver: bridge
